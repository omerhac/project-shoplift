AWSTemplateFormatVersion: 2010-09-09
Description: Order Processing for Shoplift stack template
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Default: vpc-578d263c
  SubnetA:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-21b2bb5b
  SubnetB:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-ea29fa81
  lambdaFunctionName:
    Type: String
    Default: process_order
Resources:
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: "def handler(event,context):\n  return {\n    'body': 'Hello there\
          \ {0}'.format(event['requestContext']['identity']['sourceIp']),\n    'headers':\
          \ {\n      'Content-Type': 'text/plain'\n    },\n    'statusCode': 200\n\
          \  }\n"
      Description: Example Lambda function
      FunctionName:
        Ref: lambdaFunctionName
      Handler: index.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - lambdaIAMRole
        - Arn
      Runtime: python3.8
  lambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*
        PolicyName: lambda
  lambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${lambdaFunctionName}
      RetentionInDays: 90
